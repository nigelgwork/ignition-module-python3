name: CI - Build and Security

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        working-directory: python3-integration
        run: chmod +x gradlew

      - name: Generate signing certificates
        working-directory: python3-integration
        run: |
          # Generate self-signed certificates for module signing
          keytool -genkeypair -alias gaskony -keyalg RSA -keysize 2048 \
            -validity 3650 -keystore keystore.jks \
            -storepass gaskony2024 -keypass gaskony2024 \
            -dname "CN=Gaskony, OU=Development, O=Gaskony, L=City, ST=State, C=US"

          keytool -exportcert -alias gaskony -keystore keystore.jks \
            -storepass gaskony2024 -file certificate.der

          cat > gradle.properties <<'EOF'
ignition.signing.keystoreFile=keystore.jks
ignition.signing.keystorePassword=gaskony2024
ignition.signing.certFile=certificate.der
ignition.signing.certAlias=gaskony
ignition.signing.certPassword=gaskony2024
EOF

      - name: Build with Gradle
        working-directory: python3-integration
        run: ./gradlew clean build --no-daemon --stacktrace

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: module-build
          path: python3-integration/build/*.modl
          retention-days: 30

      - name: Check module file created
        working-directory: python3-integration
        run: |
          if [ -f build/*.modl ]; then
            echo "✅ Module file created successfully"
            ls -lh build/*.modl
          else
            echo "❌ Module file not found"
            exit 1
          fi

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks (Secret Scanning)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run OWASP Dependency Check
        working-directory: python3-integration
        run: |
          chmod +x gradlew
          ./gradlew dependencyCheckAnalyze --no-daemon || echo "⚠️  Dependency vulnerabilities found (non-blocking)"
        continue-on-error: true

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check-report
          path: python3-integration/build/reports/dependency-check-report.html
          retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run Checkstyle
        working-directory: python3-integration
        run: |
          chmod +x gradlew
          ./gradlew checkstyleMain checkstyleTest --no-daemon || echo "⚠️  Code style issues found (non-blocking)"
        continue-on-error: true

      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: checkstyle-report
          path: python3-integration/build/reports/checkstyle/
          retention-days: 30

  verify-module:
    name: Verify Module Metadata
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: module-build
          path: artifacts/

      - name: Verify Module Contents
        run: |
          echo "=== Module Verification ==="

          # Check module file exists
          if ls artifacts/*.modl 1> /dev/null 2>&1; then
            echo "✅ Module file found"
            ls -lh artifacts/*.modl
          else
            echo "❌ Module file not found"
            exit 1
          fi

          # Extract and verify module.xml
          unzip -p artifacts/*.modl module.xml > module.xml

          # Check required fields
          if grep -q "<name>Python 3 Integration</name>" module.xml; then
            echo "✅ Module name correct"
          fi

          if grep -q "<id>com.gaskony.python3integration</id>" module.xml; then
            echo "✅ Module ID correct (Gaskony vendor)"
          fi

          if grep -q "Developed by Gaskony" module.xml; then
            echo "✅ Vendor name present in description"
          fi

          if grep -q "<version>" module.xml; then
            VERSION=$(grep -oP '<version>\K[^<]+' module.xml)
            echo "✅ Version found: $VERSION"
          fi

          echo ""
          echo "Module metadata:"
          grep -E "(name>|id>|version>|description>)" module.xml | head -10
