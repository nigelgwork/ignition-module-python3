name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true

jobs:
  build-release:
    name: Build Release Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Update version.properties
        working-directory: python3-integration
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          echo "version.major=$MAJOR" > version.properties
          echo "version.minor=$MINOR" >> version.properties
          echo "version.patch=$PATCH" >> version.properties
          cat version.properties

      - name: Grant execute permission for gradlew
        working-directory: python3-integration
        run: chmod +x gradlew

      - name: Generate signing certificates
        working-directory: python3-integration
        run: |
          # Generate self-signed certificates for module signing
          keytool -genkeypair -alias gaskony -keyalg RSA -keysize 2048 \
            -validity 3650 -keystore keystore.jks \
            -storepass gaskony2024 -keypass gaskony2024 \
            -dname "CN=Gaskony, OU=Development, O=Gaskony, L=City, ST=State, C=US"

          keytool -exportcert -alias gaskony -keystore keystore.jks \
            -storepass gaskony2024 -file certificate.der

          cat > gradle.properties <<EOF
          ignition.signing.keystoreFile=keystore.jks
          ignition.signing.keystorePassword=gaskony2024
          ignition.signing.certFile=certificate.der
          ignition.signing.certAlias=gaskony
          ignition.signing.certPassword=gaskony2024
          EOF

      - name: Build module
        working-directory: python3-integration
        run: ./gradlew clean build --no-daemon --stacktrace

      - name: Verify build output
        working-directory: python3-integration
        run: |
          if ls build/*.modl 1> /dev/null 2>&1; then
            echo "✅ Module file created successfully"
            ls -lh build/*.modl
          else
            echo "❌ Module file not found"
            exit 1
          fi

      - name: Create release notes
        id: release_notes
        run: |
          cat > release_notes.md <<'EOF'
          ## Python 3 Integration v${{ steps.version.outputs.version }}

          ### Module Information
          - **Module ID**: com.gaskony.python3integration
          - **Vendor**: Gaskony
          - **Ignition Version**: 8.3.0+

          ### Installation
          1. Download the `.modl` file from the assets below
          2. Navigate to your Ignition Gateway: `Config → System → Modules`
          3. Click "Install or Upgrade a Module"
          4. Upload the `.modl` file
          5. Restart the Gateway when prompted

          ### Features
          - Python 3 scripting functions in Ignition
          - Subprocess process pool architecture
          - JSON-based communication protocol

          ### Requirements
          - Ignition 8.3.0 or later
          - Java 17
          - Python 3.x installed on Gateway server

          ### Documentation
          See the [README](https://github.com/${{ github.repository }}/blob/master/README.md) for detailed documentation.

          ---
          🤖 Generated with GitHub Actions
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: python3-integration/build/*.modl
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ steps.version.outputs.version }}
          path: python3-integration/build/*.modl
          retention-days: 90
